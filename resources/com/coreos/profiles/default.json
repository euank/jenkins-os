/*
 * This profile builds public testing and development images.
 */
{
    /*
     * The AWS image created can be uploaded to, and tested on, a development
     * AWS account.
     * These credentials should have sufficient access to S3 and EC2 to create
     * a development image and to run the related tests.
     */
     "AWS_DEV_CREDS": "dev-aws",
     "AWS_DEV_BUCKET": "s3://s3-us-west-2.users.developer.core-os.net",
     "AWS_REGION": "us-west-2",

    /*
     * The OS build ID should be changed when building with a different
     * manifest job, when reusing build numbers would cause conflicting
     * branch names in the manifest-builds repository.
     */
    "BUILD_ID_PREFIX": "euank-",

    /*
     * The manifest-builds repository holds the manifest files for each
     * new build from Jenkins.  It creates new builds by pushing them
     * over SSH, and all the other jobs clone the repository.  The URL
     * for cloning does not need to be over SSH if it is public, and in
     * that case, its credentials ID can be omitted or left blank.
     */
    "BUILDS_CLONE_URL": "/manifests",
    "BUILDS_CLONE_CREDS": "",
    "BUILDS_PUSH_URL": "/manifests",
    "BUILDS_PUSH_CREDS": "",

    /*
     * When creating build commits in the manifest-builds repository,
     * these values will be used for the author and committer.
     */
    "GIT_AUTHOR_EMAIL": "euank@euank.coreos.systems",
    "GIT_AUTHOR_NAME": "CoreOS Euank Jenkins",

    /*
     * The generated images must have a default update group.
     */
    "GROUP": "developer",

    /*
     * The built OS files are uploaded to Google Storage, and they are
     * downloaded by downstream jobs.  The development files such as
     * binary packages and the SDK image may use a different storage
     * location than the final OS images.
     */
    "GS_DEVEL_ROOT": "gs://euank-jenkins-testing",
    "GS_DEVEL_CREDS": "euank-jenkins-testing.json",
    "GS_RELEASE_DOWNLOAD_ROOT": "gs://euank-jenkins-testing",
    "GS_RELEASE_ROOT": "gs://euank-jenkins-testing",
    "GS_RELEASE_CREDS": "euank-jenkins-testing.json",

    /*
     * This is the URL cloned by the os/manifest job to read the base
     * manifest files that define the OS build.
     */
    "MANIFEST_URL": "https://github.com/coreos/manifest.git",

    /*
     * All of the files resulting from the build (OS images, firmware,
     * digests, etc.) are signed with the following GPG key.  The given
     * credentials ID should point to the private key file to be used,
     * and the e-mail address identifies it to the GPG command.
     */
    "SIGNING_CREDS": "euankbot.gpg",
    "SIGNING_USER": "euankbot@euank.com",

    /*
     * A GPG keyring must be given to verify signed objects throughout
     * the build.  It should provide the public keys of anyone that can
     * sign release tags, as well as the public key of the user defined
     * in SIGNING_USER above.  The value of VERIFY_KEYRING can be the
     * entire ASCII-armored keyring from "gpg2 --armor --export" (since
     * multi-line strings are supported here), or it can be given the
     * following special format to read the keyring from an artifact:
     *
     *     artifact:JOB_NAME:FILE_NAME
     *
     * JOB_NAME should be the name of the job providing the artifact,
     * including the full path with any parent folders.  FILE_NAME is
     * the name of the artifact including any leading path component,
     * which is taken from the last successful build.
     */
    "VERIFY_KEYRING": "
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1

mQENBFj+45UBCADAoElBghijmqEnE6Iz9wVonVsnEMjAQ/jV4ctomHk6e0HgF+Gc
VXPX3fM7EDNPx6/KXi+ovBn24gUHZjrQ1Bo6WcYytIGoA0PZ9NBRQOtiPdO2LmGH
HDvnKiFoXNWziyNSGFQHXD+eNKTiUFY4P7XPFcFdFGAMrWjTmQTkX/FjOSejK2Sa
uAlyFOXU+7IDHLppP4KrjWxhTmfinKreABRig23Pv7jhUSa1M2S7lKJ3y0Q2ruat
fr/5k3/t2yIYw1+7ccO4Jfn5vyUVXiMd79zwLii2PwU5Zdza5uEuOqyIxNBJJBZB
gXcioNzHQVjVnAFZGzeGtjMDP/LBF9LH77QjABEBAAG0HWV1YW5rYm90IDxldWFu
a2JvdEBldWFuay5jb20+iQE4BBMBAgAiBQJY/uOVAhsDBgsJCAcDAgYVCAIJCgsE
FgIDAQIeAQIXgAAKCRBAPXugw4PGJQRDCACqPWbl7YNX72YFRsAUAiuinIIQ5x8n
qf91NlY9Qle4mvMZnCYLvp62MY5rkUVq+Pnl4SpeG05oRm/WdSrXL3sYkC4YR3Jv
NinsiCMftPmEdEXCwCd5YvmmsC5dej5FBEgGPbgZ9GOLFGpMnKcmKGWxu+zw2PKB
jfzzD1zDYcZ0QMEWhPRaWN1Qpg4GFLALPJG1yWj6KM61hSgwJ8zoGmtLodl620V8
K8p1oMh9ekNtjhDdOy9KpULQGp6AAJaEARoo89yOcT90kgWCoYAQBFnWTDXZE6tp
7Y8VeKKr7Z+Y2kUOvQTX4hRrSe6cCQ2eGxEHRBcmSFUDCSmgpBgPRnyauQENBFj+
45UBCADnKyPgft2nOYlL4FIrsikz1yTv2DitemkC9sHgjoHrcvvTP5DhuSZ3JnfG
2uLm0TB5sFKlztbCWNV/cGLGO6293W79T+RpP3kszXrQQTunpSdn1wjOM0fFiksI
+st7BRGmJCoNkwe5KFQDuLs5q8z4ehOyd4QA/TMMLpbgaKRGwyF7SLVSLSWquf7/
vcKbHtP00puhXXQ9YMZZTMouNhMNGAYo5ayyTkxe/R/ia7pQjN5n0dd3S9x/WYV1
XFPdIgVEvbPW+dyFcFpLaFADhOpyoUfNvx31l8ksvhPnHo0hlyQBrCAMuYVmlMXg
Y/v4N/XB/VZHqBPuOlJzezQ40MafABEBAAGJAR8EGAECAAkFAlj+45UCGwwACgkQ
QD17oMODxiX6jQf/YZgPMxfxztW1nr7rm4vwna+/MwduRYR4NuAzxVz2FX7fqT6Y
h2fbIOdXf4URwqIWil6LUWw0qPZ3tZesT4yhNI5wqML17zKr606xSwKWgdnckWBE
EuVLQuULe470iBlrk1eOsy7GUUK3kjt1LWNTHgZcphuF0VgWag+x/58ZrOq2fXnC
WoAX47ZP4jOmD5IF/RMg7BQbxed/TRuOoPerFaxr4uZNsAzc5Oi1rsXSCJtahe10
KFKmzu0sn0QjgqB+hFMliwduPWDCFLP07CqsLB3CXF95unfqE7+KC3b8M1SgCHDC
WTUOUJCc6tUCWma82782oF105Y984DzXe2TRwQ==
=5TlV
-----END PGP PUBLIC KEY BLOCK-----
",
}
